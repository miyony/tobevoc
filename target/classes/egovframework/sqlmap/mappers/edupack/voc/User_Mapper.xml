<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper
	namespace="com.tobevoc.voc.common.service.mapper.UserMapper">

	<select id="selectUser" parameterType="map" resultType="map">
		/* selectUser sql */
		select USER_NO
			 , USER_ID
			 , PASSWORD
			 , NAME
			 , DEPT_CODE
			 , HIRE_DTTM
			 , RETIRE_DTTM
			 , GENDER
			 , POS_CODE
		     , WORK_CODE
		     , MEMO
		     , SALARY
		     , EMAIL
		     , PHONE_NO
		     , BIRTH_DTTM
		FROM TB_USER
		WHERE RETIRE_YN = 'N'
		<if test="NAME != null and NAME != ''">
			AND NAME LIKE CONCAT('%', #{NAME},'%')
		</if>
		<if test="POS_CODE != null and POS_CODE != ''">
			AND POS_CODE LIKE CONCAT('%', #{POS_CODE},'%')
		</if>
		<if test="DEPT_CODE != null and DEPT_CODE != ''">
			AND DEPT_CODE = #{DEPT_CODE}
		</if>
		<if test="WORK_CODE != null and WORK_CODE != ''">
			AND WORK_CODE = #{WORK_CODE}
		</if>
		<if test="MEMO != null and MEMO != ''">
			AND MEMO = #{MEMO}
		</if>
		ORDER BY USER_NO DESC, HIRE_DTTM DESC;
	</select>
	
	
	<insert id="insertUser" parameterType="map">
		/*	insertUser sql */
		INSERT INTO TB_USER
		( USER_ID
		, PASSWORD
		, NAME
		, DEPT_CODE
		, HIRE_DTTM
		, RETIRE_DTTM
		, GENDER
		, POS_CODE
		, WORK_CODE
		, MEMO
		, SALARY
		, EMAIL
		, PHONE_NO
		, RETIRE_YN
		, BIRTH_DTTM
		)
		VALUES
		( #{USER_ID}
		, #{PASSWORD}
		, #{NAME}
		, #{DEPT_CODE}
		, #{HIRE_DTTM}
		, #{RETIRE_DTTM}
		, #{GENDER}
		, #{POS_CODE}
		, #{WORK_CODE}
		, #{MEMO}
		, #{SALARY}
		, #{EMAIL}
		, #{PHONE_NO}
		, #{RETIRE_YN}
		, #{BIRTH_DTTM}
		)
	</insert>

	<update id="updateUser" parameterType="map">
		/* updateUser sql */
		UPDATE TB_USER
		SET PASSWORD = #{PASSWORD}
			, NAME = #{NAME}
			, DEPT_CODE = #{DEPT_CODE}
			, HIRE_DTTM = #{HIRE_DTTM}
			, RETIRE_DTTM = #{RETIRE_DTTM}
			, GENDER = #{GENDER}
			, POS_CODE = #{POS_CODE}
			, WORK_CODE = #{WORK_CODE}
			, MEMO = #{MEMO}
			, SALARY = #{SALARY}
			, EMAIL = #{EMAIL}
			, PHONE_NO = #{PHONE_NO}
			, RETIRE_YN = #{RETIRE_YN}
			, BIRTH_DTTM = #{BIRTH_DTTM}
		WHERE USER_NO = #{USER_NO}
	</update>
	
	<update id="deleteUser" parameterType="map">
		/* updateUser sql */
		UPDATE TB_USER
		SET RETIRE_YN = 'Y'
		WHERE USER_NO = #{deleteUserNo}
	</update>
	
	
	
	<select id="selectHoliday" parameterType="String" resultType="map">
		/* selectHoliday sql */
		select NO
			 , USER_ID
			 , (SELECT NAME FROM TB_USER A WHERE A.USER_ID = B.USER_ID )AS USER_NAME
			 , HOLIDAY
		FROM TB_HOLIDAY B
		WHERE B.USER_ID = (SELECT USER_ID FROM TB_USER C WHERE C.NAME = #{userName})
		ORDER BY NO DESC, HOLIDAY DESC;
	</select>
	
	
	<select id="validationHoliday" parameterType="map" resultType="Integer">
		/* validationHoliday sql */
		select COUNT(NO)
		FROM TB_HOLIDAY
		WHERE USER_ID = #{USER_ID}
		AND HOLIDAY = #{HOLIDAY}
	</select>
	
	<select id="selectUserHoliday" parameterType="String" resultType="Integer">
		/* selectUserHoliday sql */
		select COUNT(*)
		FROM TB_HOLIDAY
		WHERE HOLIDAY = (select date_format(now(),'%Y%m%d'))
		AND USER_ID = #{userId}		 
	</select>
	
	
	
	
	<insert id="saveHoliday" parameterType="map">
		/*	saveHoliday sql */
		INSERT INTO TB_HOLIDAY
		( USER_ID
		, HOLIDAY
		)
		VALUES
		( #{USER_ID}
		, #{HOLIDAY}
		)
	</insert>
	
	
	<delete id="deleteHoliday" parameterType="map">
		/*	deleteHoliday sql */
		DELETE
		  FROM TB_HOLIDAY
		WHERE USER_ID = #{USER_ID}
		AND HOLIDAY = #{HOLIDAY}
	</delete>

</mapper>